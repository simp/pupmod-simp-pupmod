#!/bin/bash

PATH="/opt/puppetlabs/bin:/usr/kerberos/sbin:/usr/kerberos/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin";

now=0;
filedate=0;

puppet_run_lockfile="$(puppet config print agent_catalog_run_lockfile)";
puppet_disable_lockfile="$(puppet config print agent_disabled_lockfile)";

<% if $pupmod::agent::cron::break_puppet_lock { -%>
# This handles forcibly enabling puppet agent if _max_disable_time is exceeded.
if [ -f "${puppet_disable_lockfile}" ]; then

  now=$(date "+%s");
  filedate=$(stat --printf="%Z" ${puppet_disable_lockfile});

  /sbin/service puppet status &> /dev/null;
  pup_status=$?;

  # Do this if puppet is running without a puppet run lockfile for some reason (unlikely).
  if [[ ${pup_status} -eq 0 && ! -f "${puppet_run_lockfile}" ]]; then
    /sbin/service puppet stop > /dev/null 2>&1;
    wait;
  fi

  # If we've gotten here, then we're breaking a lock on the system in order to
  # run puppet.
  # The purpose of this is to ensure that people don't lock puppet and forget
  # about it.
  # If you want to disable puppet then disable the cron job and the service and
  # set the lockfile.
  if [[ ${pup_status} -ne 0 && $(( ${now} - ${filedate} )) -gt <%= $pupmod::agent::cron::_max_disable_time * 60 %> ]]; then
    /bin/logger -s -p 'local6.warn' -t 'puppet' "Puppet disable forcibly unlocked.";
    /bin/rm -f "${puppet_disable_lockfile}";
  fi
fi
<% } -%>

# This handles puppet processes which have been running longer than maxruntime
if [ -f "${puppet_run_lockfile}" ]; then

  # Get the process listing to check for "hung" cron job runs
  pup_status="$(ps -p "$(pidof ruby)" -o args --no-headers 2> /dev/null | grep 'puppet agent')";

  now=$(date "+%s");
  filedate=$(stat --printf="%Z" ${puppet_run_lockfile});

  # If we've gotten here, then Puppet has not completed within threshold
  if [[ -n "${pup_status}" && $(( ${now} - ${filedate} )) -gt <%= $pupmod::agent::cron::maxruntime * 60 %> ]]; then
    pkill -x puppet;
    wait;
    /bin/logger -s -p 'local6.warn' -t 'puppet' "Puppet processes forcibly killed.";
    /bin/rm -f "${puppet_run_lockfile}";
  fi
fi

# Run Puppet if we don't have any locks
if [ ! -f "${puppet_disable_lockfile}" ] && [ ! -f "${puppet_run_lockfile}" ]; then
  puppet agent --onetime --no-daemonize --no-show_diff;
fi
