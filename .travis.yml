# The testing matrix considers ruby/puppet versions supported by SIMP and PE:
# ------------------------------------------------------------------------------
# Release       Puppet   Ruby   EOL
# SIMP 6.4      5.5      2.4    TBD
# PE 2018.1     5.5      2.4    2021-01 (LTS)
# PE 2019.2     6.18     2.5    2022-12 (LTS)
#
# https://puppet.com/docs/pe/2018.1/component_versions_in_recent_pe_releases.html
# https://puppet.com/misc/puppet-enterprise-lifecycle
# https://puppet.com/docs/pe/2018.1/overview/getting_support_for_pe.html
# ==============================================================================
#
# Travis CI Repo options for this pipeline:
#
#   Travis CI Env Var      Type      Notes
#   ---------------------  --------  -------------------------------------------
#   GITHUB_OAUTH_TOKEN     Secure    Required for automated GitHub releases
#   PUPPETFORGE_API_TOKEN  Secure    Required for automated Forge releases
#   SKIP_GITHUB_PUBLISH    Optional  Skips publishing GitHub releases if "true"
#   SKIP_FORGE_PUBLISH     Optional  Skips publishing to Puppet Forge if "true"
#
#   The secure env vars will be filtered in Travis CI log output, and aren't
#   provided to untrusted builds (i.e, triggered by PR from another repository)
#
# ------------------------------------------------------------------------------
#
# Travis CI Trigger options for this pipeline:
#
#   To validate if $GITHUB_OAUTH_TOKEN is able to publish a GitHub release,
#   trigger a custom Travis CI build for this branch using the CUSTOM CONFIG:
#
#     env: VALIDATE_TOKENS=yes
#
# ------------------------------------------------------------------------------
#
# Release Engineering notes:
#
#   To automagically publish a release to GitHub and PuppetForge:
#
#   - Set GITHUB_OAUTH_TOKEN and PUPPETFORGE_API_TOKEN as secure env variables
#     in this repo's Travis CI settings
#   - Push a git tag that matches the version in the module's `metadata.json`
#   - The tag SHOULD be annotated with release notes, but nothing enforces this
#     convention at present
#
# ------------------------------------------------------------------------------
---

language: ruby
cache: bundler
version: ~> 1.0
os: linux

bundler_args: --without development system_tests --path .vendor

notifications:
  email: false

addons:
  apt:
    packages:
      - rpm

before_install:
  - for x in ${HOME}/.rvm/gems/*; do gem uninstall -I -x -i "${x}" -v '>= 1.17' bundler || true; gem uninstall -I -x -i "${x}@global" -v '>= 1.17' bundler || true; done
  - gem install -v '~> 1.17' bundler
  - rm -f Gemfile.lock

env:
  global:
    - 'FORGE_USER_AGENT="TravisCI-ForgeReleng-Script/0.3.3 (Purpose/forge-ops-for-${TRAVIS_REPO_SLUG})"'

stages:
  - name: 'validate tokens'
    if: 'env(VALIDATE_TOKENS) = yes'
  - name: check
    if: 'NOT env(VALIDATE_TOKENS) = yes'
  - name: spec
    if: 'NOT env(VALIDATE_TOKENS) = yes'
  - name: deploy
    if: 'tag IS present AND NOT env(VALIDATE_TOKENS) = yes'

jobs:
  include:
    ###  Testing on Travis CI is indefinitely disabled
    ###
    ###  See:
    ###    * https://blog.travis-ci.com/2020-11-02-travis-ci-new-billing
    ###    * https://simp-project.atlassian.net/browse/SIMP-8703
    ###
    ###
    ###    - stage: check
    ###      name: 'Syntax, style, and validation checks'
    ###      rvm: 2.4.9
    ###      env: PUPPET_VERSION="~> 5"
    ###      script:
    ###        - bundle exec rake check:dot_underscore
    ###        - bundle exec rake check:test_file
    ###        - bundle exec rake pkg:check_version
    ###        - bundle exec rake metadata_lint
    ###        - bundle exec rake pkg:compare_latest_tag
    ###        - bundle exec rake pkg:create_tag_changelog
    ###        - bundle exec rake lint
    ###        - bundle exec puppet module build
    ###
    ###    - stage: spec
    ###      rvm: 2.4.9
    ###      name: 'Puppet 5.5 (SIMP 6.4, PE 2018.1)'
    ###      env: PUPPET_VERSION="~> 5.5.0"
    ###      script:
    ###        - bundle exec rake spec
    ###
    ###    - stage: spec
    ###      name: 'Puppet 5.x (Latest)'
    ###      rvm: 2.4.9
    ###      env: PUPPET_VERSION="~> 5.0"
    ###      script:
    ###        - bundle exec rake spec
    ###
    ###    - stage: spec
    ###      name: 'Puppet 6.18 (PE 2019.2)'
    ###      rvm: 2.5.7
    ###      env: PUPPET_VERSION="~> 6.18.0"
    ###      script:
    ###        - bundle exec rake spec

    - stage: deploy
      rvm: 2.4.9
      env: PUPPET_VERSION="~> 5.5.0"
      script:
        - true
      before_deploy:
        - "export PUPMOD_METADATA_VERSION=`ruby -r json -e \"puts JSON.parse(File.read('metadata.json')).fetch('version')\"`"
        - '[[ $TRAVIS_TAG =~ ^simp-${PUPMOD_METADATA_VERSION}$|^${PUPMOD_METADATA_VERSION}$ ]]'
        - 'gem install -v "~> 5.5.0" puppet'
        - 'git clean -f -x -d'
        - 'puppet module build'
        - 'find pkg -name ''*.tar.gz'''
      deploy:
        - provider: script
          skip_cleanup: true
          script: 'curl -sS --fail -A "$FORGE_USER_AGENT" -H "Authorization: Bearer ${PUPPETFORGE_API_TOKEN}" -X POST -F "file=@$(find $PWD/pkg -name ''*.tar.gz'')" https://forgeapi.puppet.com/v3/releases'
          on:
            tags: true
            condition: '($SKIP_FORGE_PUBLISH != true)'
        - provider: releases
          token: $GITHUB_OAUTH_TOKEN
          on:
            tags: true
            condition: '($SKIP_GITHUB_PUBLISH != true)'

    - stage: 'validate tokens'
      language: shell
      before_install: skip
      install: skip
      name:  'validate CI GitHub OAuth token has sufficient scope to release'
      script:
      - 'echo; echo "===== GITHUB_OAUTH_TOKEN validation";echo "  (TRAVIS_SECURE_ENV_VARS=$TRAVIS_SECURE_ENV_VARS)"; echo'
      - 'OWNER="$(echo $TRAVIS_REPO_SLUG | cut -d/ -f1)"'
      - 'curl -H "Authorization: token ${GITHUB_OAUTH_TOKEN}"
          "https://api.github.com/users/$OWNER"
          -I | grep ^X-OAuth-Scopes | egrep -w "repo|public_repo"'

    - stage: 'validate tokens'
      name:  'validate CI Puppet Forge token authenticates with API'
      language: shell
      before_install: skip
      install: skip
      script:
      - 'echo; echo "===== PUPPETFORGE_API_TOKEN validation"; echo "  (TRAVIS_SECURE_ENV_VARS=$TRAVIS_SECURE_ENV_VARS)"; echo'
      - 'curl -sS --fail -A "$FORGE_USER_AGENT"
         -H "Authorization: Bearer ${PUPPETFORGE_API_TOKEN:-default_content_to_cause_401_response}"
         https://forgeapi.puppet.com/v3/users > /dev/null'
